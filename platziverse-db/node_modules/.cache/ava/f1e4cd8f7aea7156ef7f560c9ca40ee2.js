'use strict';

const test = require('ava');

const sinon = require('sinon');

const proxyquire = require('proxyquire');

const config = {
  logging() {}

};
let MetricStub = {
  belongsTo: sinon.spy()
};
let AgentStub = null;
let db = null;
let sandbox = null;
test.beforeEach(async () => {
  sandbox = sinon.createSandbox();
  AgentStub = {
    hasMany: sandbox.spy()
  };
  const setupDatabase = proxyquire('../', {
    './models/agent': () => AgentStub,
    './models/metric': () => MetricStub
  });
  db = await setupDatabase(config);
});
test.afterEach(() => {
  sandbox && sinon.sandbox.restore();
});
test('Agent', t => {
  t.truthy(db.Agent, 'Agent service should exists');
});
test.serial('Setup', t => {
  t.true(AgentStub.hasMany.called, 'AgentModel.hasMany was executed');
  t.true(MetricStub.belongsTo.called, 'MetricModel.belongsTo was executed');
});
//# sourceMappingURL=C:\Users\USER\Desktop\platziverse\platziverse-db\node_modules\.cache\ava\f1e4cd8f7aea7156ef7f560c9ca40ee2.js.map