{"version":3,"sources":["tests\\fixtures\\metric.js"],"names":["agentFixtures","require","utils","extend","metric","id","agent_id","type","value","created_at","Date","agent","byId","metrics","yId","findByAgentUuid","uuid","filter","m","map","clone","Object","assign","findByTypeAgentUuid","sort","sortBy","reverse","module","exports","all"],"mappings":"AAAA;;AAEA,MAAMA,aAAa,GAAGC,OAAO,CAAC,SAAD,CAA7B;;AACA,MAAMC,KAAK,GAAGD,OAAO,CAAC,aAAD,CAArB;;AAEA,MAAME,MAAM,GAAGD,KAAK,CAACC,MAArB;AAEA,MAAMC,MAAM,GAAG;AACbC,EAAAA,EAAE,EAAE,CADS;AAEbC,EAAAA,QAAQ,EAAE,CAFG;AAGbC,EAAAA,IAAI,EAAE,KAHO;AAIbC,EAAAA,KAAK,EAAE,KAJM;AAKbC,EAAAA,UAAU,EAAE,IAAIC,IAAJ,EALC;AAMbC,EAAAA,KAAK,EAAEX,aAAa,CAACY,IAAd,CAAmB,CAAnB;AANM,CAAf;AASA,MAAMC,OAAO,GAAG,CACdT,MADc,EAEdD,MAAM,CAACC,MAAD,EAAS;AAAEC,EAAAA,EAAE,EAAE,CAAN;AAASG,EAAAA,KAAK,EAAE;AAAhB,CAAT,CAFQ,EAGdL,MAAM,CAACC,MAAD,EAAS;AAAEC,EAAAA,EAAE,EAAE,CAAN;AAASG,EAAAA,KAAK,EAAE;AAAhB,CAAT,CAHQ,EAIdL,MAAM,CAACC,MAAD,EAAS;AAAEC,EAAAA,EAAE,EAAE,CAAN;AAASC,EAAAA,QAAQ,EAAE,CAAnB;AAAsBC,EAAAA,IAAI,EAAE,QAA5B;AAAsCC,EAAAA,KAAK,EAAE,KAA7C;AAAoDG,EAAAA,KAAK,EAAEX,aAAa,CAACc,GAAd,CAAkB,CAAlB;AAA3D,CAAT,CAJQ,CAAhB;;AAOA,SAASC,eAAT,CAA0BC,IAA1B,EAAgC;AAC9B,SAAOH,OAAO,CAACI,MAAR,CAAeC,CAAC,IAAIA,CAAC,CAACP,KAAF,GAAUO,CAAC,CAACP,KAAF,CAAQK,IAAR,KAAiBA,IAA3B,GAAkC,KAAtD,EAA6DG,GAA7D,CAAiED,CAAC,IAAI;AAC3E,UAAME,KAAK,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,CAAlB,CAAd;AAEA,WAAOE,KAAK,CAACT,KAAb;AAEA,WAAOS,KAAP;AACD,GANM,CAAP;AAOD;;AAED,SAASG,mBAAT,CAA8BhB,IAA9B,EAAoCS,IAApC,EAA0C;AACxC,SAAOH,OAAO,CAACI,MAAR,CAAeC,CAAC,IAAIA,CAAC,CAACX,IAAF,KAAWA,IAAX,KAAoBW,CAAC,CAACP,KAAF,GAAUO,CAAC,CAACP,KAAF,CAAQK,IAAR,KAAiBA,IAA3B,GAAkC,KAAtD,CAApB,EAAkFG,GAAlF,CAAsFD,CAAC,IAAI;AAChG,UAAME,KAAK,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,CAAlB,CAAd;AAEA,WAAOE,KAAK,CAACd,QAAb;AACA,WAAOc,KAAK,CAACT,KAAb;AAEA,WAAOS,KAAP;AACD,GAPM,EAOJI,IAPI,CAOCtB,KAAK,CAACuB,MAAN,CAAa,YAAb,CAPD,EAO6BC,OAP7B,EAAP;AAQD;;AAEDC,MAAM,CAACC,OAAP,GAAiB;AACfC,EAAAA,GAAG,EAAEhB,OADU;AAEfE,EAAAA,eAFe;AAGfQ,EAAAA;AAHe,CAAjB","sourceRoot":"C:\\Users\\USER\\Desktop\\platziverse\\platziverse-db","sourcesContent":["'use strict'\r\n\r\nconst agentFixtures = require('./agent')\r\nconst utils = require('../../utils')\r\n\r\nconst extend = utils.extend\r\n\r\nconst metric = {\r\n  id: 1,\r\n  agent_id: 1,\r\n  type: 'CPU',\r\n  value: '18%',\r\n  created_at: new Date(),\r\n  agent: agentFixtures.byId(1)\r\n}\r\n\r\nconst metrics = [\r\n  metric,\r\n  extend(metric, { id: 2, value: '25%' }),\r\n  extend(metric, { id: 3, value: '2%' }),\r\n  extend(metric, { id: 4, agent_id: 2, type: 'Memory', value: '33%', agent: agentFixtures.yId(2) })\r\n]\r\n\r\nfunction findByAgentUuid (uuid) {\r\n  return metrics.filter(m => m.agent ? m.agent.uuid === uuid : false).map(m => {\r\n    const clone = Object.assign({}, m)\r\n\r\n    delete clone.agent\r\n\r\n    return clone\r\n  })\r\n}\r\n\r\nfunction findByTypeAgentUuid (type, uuid) {\r\n  return metrics.filter(m => m.type === type && (m.agent ? m.agent.uuid === uuid : false)).map(m => {\r\n    const clone = Object.assign({}, m)\r\n\r\n    delete clone.agent_id\r\n    delete clone.agent\r\n\r\n    return clone\r\n  }).sort(utils.sortBy('created_at')).reverse()\r\n}\r\n\r\nmodule.exports = {\r\n  all: metrics,\r\n  findByAgentUuid,\r\n  findByTypeAgentUuid\r\n}\n"]}