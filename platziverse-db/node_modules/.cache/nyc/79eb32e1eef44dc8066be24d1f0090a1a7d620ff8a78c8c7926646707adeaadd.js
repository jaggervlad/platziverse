'use strict';var cov_1q9js9550v=function(){var path="C:\\Users\\USER\\Desktop\\platziverse\\platziverse-db\\tests\\agent-tests.js";var hash="e04317c6db7e22537f13a591b9e4eb5b7bc75386";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"C:\\Users\\USER\\Desktop\\platziverse\\platziverse-db\\tests\\agent-tests.js",statementMap:{"0":{start:{line:3,column:13},end:{line:3,column:27}},"1":{start:{line:5,column:14},end:{line:5,column:30}},"2":{start:{line:7,column:19},end:{line:7,column:40}},"3":{start:{line:9,column:15},end:{line:12,column:1}},"4":{start:{line:13,column:17},end:{line:15,column:1}},"5":{start:{line:16,column:16},end:{line:16,column:20}},"6":{start:{line:17,column:9},end:{line:17,column:13}},"7":{start:{line:18,column:14},end:{line:18,column:18}},"8":{start:{line:19,column:0},end:{line:29,column:3}},"9":{start:{line:20,column:2},end:{line:20,column:34}},"10":{start:{line:21,column:2},end:{line:23,column:4}},"11":{start:{line:24,column:24},end:{line:27,column:4}},"12":{start:{line:25,column:28},end:{line:25,column:37}},"13":{start:{line:26,column:29},end:{line:26,column:39}},"14":{start:{line:28,column:2},end:{line:28,column:35}},"15":{start:{line:30,column:0},end:{line:32,column:3}},"16":{start:{line:31,column:2},end:{line:31,column:34}},"17":{start:{line:33,column:0},end:{line:35,column:3}},"18":{start:{line:34,column:2},end:{line:34,column:52}},"19":{start:{line:36,column:0},end:{line:41,column:3}},"20":{start:{line:37,column:2},end:{line:37,column:70}},"21":{start:{line:38,column:2},end:{line:38,column:89}},"22":{start:{line:39,column:2},end:{line:39,column:76}},"23":{start:{line:40,column:2},end:{line:40,column:90}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:10,column:2},end:{line:10,column:3}},loc:{start:{line:10,column:12},end:{line:10,column:14}},line:10},"1":{name:"(anonymous_1)",decl:{start:{line:19,column:16},end:{line:19,column:17}},loc:{start:{line:19,column:28},end:{line:29,column:1}},line:19},"2":{name:"(anonymous_2)",decl:{start:{line:25,column:22},end:{line:25,column:23}},loc:{start:{line:25,column:28},end:{line:25,column:37}},line:25},"3":{name:"(anonymous_3)",decl:{start:{line:26,column:23},end:{line:26,column:24}},loc:{start:{line:26,column:29},end:{line:26,column:39}},line:26},"4":{name:"(anonymous_4)",decl:{start:{line:30,column:15},end:{line:30,column:16}},loc:{start:{line:30,column:21},end:{line:32,column:1}},line:30},"5":{name:"(anonymous_5)",decl:{start:{line:33,column:14},end:{line:33,column:15}},loc:{start:{line:33,column:19},end:{line:35,column:1}},line:33},"6":{name:"(anonymous_6)",decl:{start:{line:36,column:21},end:{line:36,column:22}},loc:{start:{line:36,column:26},end:{line:41,column:1}},line:36}},branchMap:{"0":{loc:{start:{line:31,column:2},end:{line:31,column:33}},type:"binary-expr",locations:[{start:{line:31,column:2},end:{line:31,column:9}},{start:{line:31,column:13},end:{line:31,column:33}}],line:31}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0},b:{"0":[0,0]},_coverageSchema:"43e27e138ebf9cfc5966b082cf9a028302ed4184",hash:"e04317c6db7e22537f13a591b9e4eb5b7bc75386"};var coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}return coverage[path]=coverageData;}();const test=(cov_1q9js9550v.s[0]++,require('ava'));const sinon=(cov_1q9js9550v.s[1]++,require('sinon'));const proxyquire=(cov_1q9js9550v.s[2]++,require('proxyquire'));const config=(cov_1q9js9550v.s[3]++,{logging(){cov_1q9js9550v.f[0]++;}});let MetricStub=(cov_1q9js9550v.s[4]++,{belongsTo:sinon.spy()});let AgentStub=(cov_1q9js9550v.s[5]++,null);let db=(cov_1q9js9550v.s[6]++,null);let sandbox=(cov_1q9js9550v.s[7]++,null);cov_1q9js9550v.s[8]++;test.beforeEach(async()=>{cov_1q9js9550v.f[1]++;cov_1q9js9550v.s[9]++;sandbox=sinon.createSandbox();cov_1q9js9550v.s[10]++;AgentStub={hasMany:sandbox.spy()};const setupDatabase=(cov_1q9js9550v.s[11]++,proxyquire('../',{'./models/agent':()=>{cov_1q9js9550v.f[2]++;cov_1q9js9550v.s[12]++;return AgentStub;},'./models/metric':()=>{cov_1q9js9550v.f[3]++;cov_1q9js9550v.s[13]++;return MetricStub;}}));cov_1q9js9550v.s[14]++;db=await setupDatabase(config);});cov_1q9js9550v.s[15]++;test.afterEach(()=>{cov_1q9js9550v.f[4]++;cov_1q9js9550v.s[16]++;(cov_1q9js9550v.b[0][0]++,sandbox)&&(cov_1q9js9550v.b[0][1]++,sinon.resetHistory());});cov_1q9js9550v.s[17]++;test('Agent',t=>{cov_1q9js9550v.f[5]++;cov_1q9js9550v.s[18]++;t.truthy(db.Agent,'Agent service should exists');});cov_1q9js9550v.s[19]++;test.serial('Setup',t=>{cov_1q9js9550v.f[6]++;cov_1q9js9550v.s[20]++;t.true(AgentStub.hasMany.called,'AgentModel.hasMany was executed');cov_1q9js9550v.s[21]++;t.true(AgentStub.hasMany.calledWith(MetricStub),'Argument should be the MetricModel');cov_1q9js9550v.s[22]++;t.true(MetricStub.belongsTo.called,'MetricModel.belongsTo was executed');cov_1q9js9550v.s[23]++;t.true(MetricStub.belongsTo.calledWith(AgentStub),'Argument should be the AgentModel');});//# sourceMappingURL=C:\Users\USER\Desktop\platziverse\platziverse-db\node_modules\.cache\ava\0d3088d072c194acafe022a693085072.js.map