'use strict';var cov_1jq0go4m49=function(){var path="C:\\Users\\USER\\Desktop\\platziverse\\platziverse-db\\lib\\metric.js";var hash="a209c5c13bb78c5b18aa3fbfb6bd70e8ff41adaa";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"C:\\Users\\USER\\Desktop\\platziverse\\platziverse-db\\lib\\metric.js",statementMap:{"0":{start:{line:3,column:0},end:{line:54,column:1}},"1":{start:{line:5,column:4},end:{line:16,column:6}},"2":{start:{line:20,column:4},end:{line:35,column:6}},"3":{start:{line:38,column:18},end:{line:40,column:6}},"4":{start:{line:42,column:4},end:{line:46,column:5}},"5":{start:{line:43,column:6},end:{line:43,column:50}},"6":{start:{line:44,column:21},end:{line:44,column:54}},"7":{start:{line:45,column:6},end:{line:45,column:28}},"8":{start:{line:49,column:2},end:{line:53,column:3}}},fnMap:{"0":{name:"setUpMetric",decl:{start:{line:3,column:26},end:{line:3,column:37}},loc:{start:{line:3,column:65},end:{line:54,column:1}},line:3},"1":{name:"findByAgentUuid",decl:{start:{line:4,column:17},end:{line:4,column:32}},loc:{start:{line:4,column:40},end:{line:17,column:3}},line:4},"2":{name:"findByTypeAgentUuid",decl:{start:{line:19,column:17},end:{line:19,column:36}},loc:{start:{line:19,column:50},end:{line:36,column:3}},line:19},"3":{name:"create",decl:{start:{line:37,column:17},end:{line:37,column:23}},loc:{start:{line:37,column:39},end:{line:47,column:3}},line:37}},branchMap:{"0":{loc:{start:{line:42,column:4},end:{line:46,column:5}},type:"if",locations:[{start:{line:42,column:4},end:{line:46,column:5}},{start:{line:42,column:4},end:{line:46,column:5}}],line:42}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0},f:{"0":0,"1":0,"2":0,"3":0},b:{"0":[0,0]},_coverageSchema:"43e27e138ebf9cfc5966b082cf9a028302ed4184",hash:"a209c5c13bb78c5b18aa3fbfb6bd70e8ff41adaa"};var coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}return coverage[path]=coverageData;}();cov_1jq0go4m49.s[0]++;module.exports=function setUpMetric(MetrictModel,AgentModel){cov_1jq0go4m49.f[0]++;async function findByAgentUuid(uuid){cov_1jq0go4m49.f[1]++;cov_1jq0go4m49.s[1]++;return MetrictModel.findAll({attributes:['type'],group:['type'],include:[{attributes:[],model:AgentModel,where:{uuid}}],raw:true});}async function findByTypeAgentUuid(type,uuid){cov_1jq0go4m49.f[2]++;cov_1jq0go4m49.s[2]++;return MetrictModel.findAll({attributes:['id','type','value','createdAtd'],where:{type},limit:20,order:[['createdAt','DESC']],include:[{attributes:[],model:AgentModel,where:{uuid}}],raw:true});}async function create(uuid,metric){cov_1jq0go4m49.f[3]++;const agent=(cov_1jq0go4m49.s[3]++,await AgentModel.findOne({where:{uuid}}));cov_1jq0go4m49.s[4]++;if(agent){cov_1jq0go4m49.b[0][0]++;cov_1jq0go4m49.s[5]++;Object.assign(metric,{agentId:agent.id});const result=(cov_1jq0go4m49.s[6]++,await MetrictModel.create(metric));cov_1jq0go4m49.s[7]++;return result.toJSON();}else{cov_1jq0go4m49.b[0][1]++;}}cov_1jq0go4m49.s[8]++;return{create,findByAgentUuid,findByTypeAgentUuid};};